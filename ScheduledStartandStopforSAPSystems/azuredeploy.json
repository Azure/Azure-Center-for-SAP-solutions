{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "LogicAppName": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "The name of the logic app that creates start/stop schedule."
      }
    },
    "SAPOperationType": {
      "allowedValues": ["start", "stop"],
      "type": "string",
      "metadata": {
        "allowedValues": ["start", "stop"],
        "description": "Operation to be performed on SAP resource.",
        "displayName": "SAP operation type",
        "required": true
      }
    },
    "IncludeDatabaseOperations": {
      "type": "bool",
      "metadata": {
        "description": "Start/Stop the Database Instance",
        "displayName": "Include Database instance",
        "required": false
      }
    },
    "IncludeVirtualMachineOperation": {
      "type": "bool",
      "metadata": {
        "description": "Start/Stop the virtual machines",
        "displayName": "Include virtual machines operation",
        "required": true
      }
    },
    "OperationExecution": {
      "type": "string",
      "metadata": {
        "description": "Perform operations in sequence",
        "displayName": "Perform operations in sequence",
        "required": true
      }
    },
    "SoftStopTimeout": {
      "type": "int",
      "defaultValue": 0,
      "metadata": {
        "required": false,
        "displayName": "Soft stop timeout (in seconds)",
        "description": "Soft stop timeout value, if this value is 0, hard stop will be triggered"
      }
    },
    "VirtualInstanceForSAPSolutionsResourceID": {
      "type": "array",
      "metadata": {
        "displayName": "Virtual Instance for SAP solutions Resource ID(s)",
        "required": true
      }
    },
    "Frequency": {
      "allowedValues": ["Month", "Week", "Day"],
      "type": "string",
      "metadata": {
        "allowedValues": ["Month", "Week", "Day"],
        "description": "How often should schedule run. i.e. Weekly",
        "displayName": "Frequency",
        "placeholder": "How often does schedule run",
        "required": false
      }
    },
    "Interval": {
      "type": "int"
    },
    "OnTheseDays": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Remove the days in a week you want to skip the opeartion",
        "required": false,
        "displayName": "On these days"
      }
    },
    "AtTheseHours": {
      "type": "array",
      "defaultValue": ["00"],
      "metadata": {
        "required": false,
        "displayName": "At these hours"
      }
    },
    "AtThisMinutes": {
      "type": "array",
      "defaultValue": ["0"],
      "metadata": {
        "required": false,
        "displayName": "At these minutes"
      }
    },
    "StartTime": {
      "type": "string",
      "metadata": {
        "description": "Select start time to Power On SAP system",
        "displayName": "Start Time",
        "format": "timeFormat",
        "required": false
      }
    },
    "TimeZone": {
      "type": "string",
      "metadata": {
        "description": "Select time zone for task schedule",
        "displayName": "Time zone",
        "placeholder": "Select time zone for task schedule",
        "required": true
      }
    },
    "ManagedIdentityId": {
      "type": "string",
      "metadata": {
        "description": "Managed Identity Id",
        "displayName": "Managed Identity Id",
        "required": true
      }
    }
  },
  "variables": {
    "armConnectionName": "[concat('sapops-arm-',uniqueString(deployment().name))]",
    "logicAppAlertName": "[toLower( concat( parameters('LogicAppName'), '-logicappalert-', uniqueString(deployment().name) ) )]",
    "actionGroupName": "[toLower( concat( 'sapops-', uniqueString(deployment().name) ) )]",
    "visAlertName": "[toLower( concat( 'sapops-visalert-', uniqueString(deployment().name) ) )]",
    "defaultAtTheseHours": ["0"],
    "dailySchedule": {
      "Recurrence": {
        "recurrence": {
          "frequency": "[parameters('Frequency')]",
          "interval": "[parameters('Interval')]",
          "startTime": "[parameters('StartTime')]",
          "schedule": {
            "hours": "[if(equals(length(parameters('AtTheseHours')), 0), json(string(variables('defaultAtTheseHours'))), parameters('AtTheseHours'))]",
            "minutes": "[parameters('AtThisMinutes')]"
          },
          "timeZone": "[parameters('TimeZone')]"
        },
        "type": "Recurrence"
      }
    },
    "weeklySchedule": {
      "Recurrence": {
        "recurrence": {
          "frequency": "[parameters('Frequency')]",
          "interval": "[parameters('Interval')]",
          "startTime": "[parameters('StartTime')]",
          "schedule": {
            "weekDays": "[parameters('OnTheseDays')]",
            "hours": "[if(equals(length(parameters('AtTheseHours')), 0), json(string(variables('defaultAtTheseHours'))), parameters('AtTheseHours'))]",
            "minutes": "[parameters('AtThisMinutes')]"
          },
          "timeZone": "[parameters('TimeZone')]"
        },
        "type": "Recurrence"
      }
    },
    "monthlySchedule": {
      "Recurrence": {
        "recurrence": {
          "frequency": "[parameters('Frequency')]",
          "interval": "[parameters('Interval')]",
          "startTime": "[parameters('StartTime')]",
          "timeZone": "[parameters('TimeZone')]"
        },
        "type": "Recurrence"
      }
    },
    "otherSchedule": "[if(equals(parameters('Frequency'), 'Week'), variables('weeklySchedule'), variables('dailySchedule'))]",
    "sequentialOperations": {
      "concurrency": {
        "repetitions": 1
      }
    },
    "concurrentOperations": {
      "concurrency": {
        "repetitions": 20
      }
    }
  },
  "resources": [
    {
      "name": "[parameters('LogicAppName')]",
      "type": "Microsoft.Logic/workflows",
      "location": "[resourceGroup().location]",
      "apiVersion": "2019-05-01",
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', variables('armConnectionName'))]"
      ],
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[parameters('ManagedIdentityId')]": {}
        }
      },
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            },
            "ResourceName": {
              "defaultValue": "[parameters('VirtualInstanceForSAPsolutionsResourceID')]",
              "type": "array"
            },
            "OperationName": {
              "defaultValue": "[parameters('SAPOperationType')]",
              "type": "string"
            },
            "SoftStopTimeout": {
              "defaultValue": "[parameters('SoftStopTimeout')]",
              "type": "int"
            },
            "IncludeDatabaseOperations": {
              "defaultValue": "[parameters('IncludeDatabaseOperations')]",
              "type": "bool"
            },
            "IncludeVirtualMachineOperation": {
              "defaultValue": "[parameters('IncludeVirtualMachineOperation')]",
              "type": "bool"
            }
          },
          "triggers": "[if(equals(parameters('Frequency'), 'Month'), variables('monthlySchedule'), variables('otherSchedule'))]",
          "actions": {
            "Check_if_Logic_App_Ran_Successfully": {
                "actions": {
                    "Terminate_with_Success": {
                        "inputs": {
                            "runStatus": "Succeeded"
                        },
                        "type": "Terminate"
                    }
                },
                "else": {
                    "actions": {
                        "Terminate_with_Failure": {
                            "inputs": {
                                "runError": {
                                    "code": "SomeOperationsHaveFailed",
                                    "message": "Resources with Error: @{variables('ErrorResources')}"
                                },
                                "runStatus": "Failed"
                            },
                            "type": "Terminate"
                        }
                    }
                },
                "expression": {
                    "and": [
                        {
                            "equals": [
                                "@variables('LogicAppSuccessExecution')",
                                true
                            ]
                        }
                    ]
                },
                "runAfter": {
                    "SAP_operation_type": [
                        "Succeeded"
                    ]
                },
                "type": "If"
            },
            "Logic_App_Success_or_Failed_Execution": {
                "inputs": {
                    "variables": [
                        {
                            "name": "LogicAppSuccessExecution",
                            "type": "boolean",
                            "value": true
                        }
                    ]
                },
                "runAfter": {},
                "type": "InitializeVariable"
            },
            "Resources_with_errors": {
                "inputs": {
                    "variables": [
                        {
                            "name": "ErrorResources",
                            "type": "array",
                            "value": []
                        }
                    ]
                },
                "runAfter": {
                    "Logic_App_Success_or_Failed_Execution": [
                        "Succeeded"
                    ]
                },
                "type": "InitializeVariable"
            },
            "SAP_operation_type": {
                "actions": {
                    "For_each_VIS_resource_start": {
                        "actions": {
                            "Check_if_there_were_no_errors_in_previous_start_operations_if_any_": {
                                "actions": {
                                    "Assume_VIS_to_be_stopped": {
                                        "inputs": {
                                            "name": "Temp Array with Stopped VIS [Start]",
                                            "value": "@items('For_each_VIS_resource_start')"
                                        },
                                        "runAfter": {
                                            "Initiate_VIS_resource_start": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "AppendToArrayVariable"
                                    },
                                    "Check_if_VIS_is_running": {
                                        "actions": {},
                                        "else": {
                                            "actions": {
                                                "Append_VIS_Details_to_error_array": {
                                                    "inputs": {
                                                        "name": "ErrorResources",
                                                        "value": "@body('Parse_VIS_Details_for_status')?['id']"
                                                    },
                                                    "type": "AppendToArrayVariable"
                                                },
                                                "Set_Logic_App_Success_to_false_because_VIS_Start_failed": {
                                                    "inputs": {
                                                        "name": "LogicAppSuccessExecution",
                                                        "value": false
                                                    },
                                                    "runAfter": {
                                                        "Append_VIS_Details_to_error_array": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "SetVariable"
                                                }
                                            }
                                        },
                                        "expression": {
                                            "and": [
                                                {
                                                    "not": {
                                                        "contains": [
                                                            "@variables('VIS with running database instances')",
                                                            "@items('For_each_VIS_resource_start')"
                                                        ]
                                                    }
                                                }
                                            ]
                                        },
                                        "runAfter": {
                                            "Until_VIS_is_in_running_state": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "If"
                                    },
                                    "Initiate_VIS_resource_start": {
                                        "inputs": {
                                            "body": {
                                                "startVm": "@parameters('IncludeVirtualMachineOperation')"
                                            },
                                            "host": {
                                                "connection": {
                                                    "name": "@parameters('$connections')['arm']['connectionId']"
                                                }
                                            },
                                            "method": "post",
                                            "path": "/subscriptions/@{encodeURIComponent(split(items('For_each_VIS_resource_start'), '/')[2])}/resourcegroups/@{encodeURIComponent(split(items('For_each_VIS_resource_start'), '/')[4])}/providers/@{encodeURIComponent('Microsoft.Workloads')}/@{encodeURIComponent('sapVirtualInstances/',split(items('For_each_VIS_resource_start'), '/')[8])}/@{encodeURIComponent(parameters('OperationName'))}",
                                            "queries": {
                                                "x-ms-api-version": "2023-10-01-preview"
                                            }
                                        },
                                        "type": "ApiConnection"
                                    },
                                    "Until_VIS_is_in_running_state": {
                                        "actions": {
                                            "Check_if_VIS_is_running_now": {
                                                "actions": {
                                                    "Remove_VIS_from_running_VIS_Array-copy": {
                                                        "inputs": {
                                                            "from": "@variables('Temp Array with Stopped VIS [Start]')",
                                                            "where": "@not(equals(item(),items('For_each_VIS_resource_start')))"
                                                        },
                                                        "type": "Query"
                                                    },
                                                    "Set_Temp_VIS_Stopped_array_to_current_val": {
                                                        "inputs": {
                                                            "name": "Temp Array with Stopped VIS [Start]",
                                                            "value": "@body('Remove_VIS_from_running_VIS_Array-copy')"
                                                        },
                                                        "runAfter": {
                                                            "Remove_VIS_from_running_VIS_Array-copy": [
                                                                "Succeeded"
                                                            ]
                                                        },
                                                        "type": "SetVariable"
                                                    }
                                                },
                                                "else": {
                                                    "actions": {}
                                                },
                                                "expression": {
                                                    "and": [
                                                        {
                                                            "equals": [
                                                                "@body('Parse_VIS_Details_for_status')?['properties']?['status']",
                                                                "Running"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "runAfter": {
                                                    "Parse_VIS_Details_for_status": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "If"
                                            },
                                            "Parse_VIS_Details_for_status": {
                                                "inputs": {
                                                    "content": "@body('Read_current_status_of_VIS__to_check_if_running')",
                                                    "schema": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "string"
                                                            },
                                                            "identity": {
                                                                "properties": {
                                                                    "type": {
                                                                        "type": "string"
                                                                    },
                                                                    "userAssignedIdentities": {
                                                                        "properties": {
                                                                            "/subscriptions/49d64d54-e966-4c46-a868-1999802b762c/resourcegroups/ajgupt-test/providers/Microsoft.ManagedIdentity/userAssignedIdentities/ajgupttest": {
                                                                                "properties": {
                                                                                    "clientId": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "principalId": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "location": {
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "properties": {
                                                                "properties": {
                                                                    "configuration": {
                                                                        "properties": {
                                                                            "appLocation": {
                                                                                "type": "string"
                                                                            },
                                                                            "configurationType": {
                                                                                "type": "string"
                                                                            },
                                                                            "infrastructureConfiguration": {
                                                                                "properties": {
                                                                                    "appResourceGroup": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "applicationServer": {
                                                                                        "properties": {
                                                                                            "instanceCount": {
                                                                                                "type": "integer"
                                                                                            },
                                                                                            "subnetId": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "virtualMachineConfiguration": {
                                                                                                "properties": {
                                                                                                    "imageReference": {
                                                                                                        "properties": {
                                                                                                            "offer": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "publisher": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "sku": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "version": {
                                                                                                                "type": "string"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "osProfile": {
                                                                                                        "properties": {
                                                                                                            "adminUsername": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "osConfiguration": {
                                                                                                                "properties": {
                                                                                                                    "disablePasswordAuthentication": {
                                                                                                                        "type": "boolean"
                                                                                                                    },
                                                                                                                    "osType": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "sshKeyPair": {
                                                                                                                        "properties": {
                                                                                                                            "publicKey": {
                                                                                                                                "type": "string"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "type": "object"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "vmSize": {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "centralServer": {
                                                                                        "properties": {
                                                                                            "instanceCount": {
                                                                                                "type": "integer"
                                                                                            },
                                                                                            "subnetId": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "virtualMachineConfiguration": {
                                                                                                "properties": {
                                                                                                    "imageReference": {
                                                                                                        "properties": {
                                                                                                            "offer": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "publisher": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "sku": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "version": {
                                                                                                                "type": "string"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "osProfile": {
                                                                                                        "properties": {
                                                                                                            "adminUsername": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "osConfiguration": {
                                                                                                                "properties": {
                                                                                                                    "disablePasswordAuthentication": {
                                                                                                                        "type": "boolean"
                                                                                                                    },
                                                                                                                    "osType": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "sshKeyPair": {
                                                                                                                        "properties": {
                                                                                                                            "publicKey": {
                                                                                                                                "type": "string"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "type": "object"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "vmSize": {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "databaseServer": {
                                                                                        "properties": {
                                                                                            "instanceCount": {
                                                                                                "type": "integer"
                                                                                            },
                                                                                            "subnetId": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "virtualMachineConfiguration": {
                                                                                                "properties": {
                                                                                                    "imageReference": {
                                                                                                        "properties": {
                                                                                                            "offer": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "publisher": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "sku": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "version": {
                                                                                                                "type": "string"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "osProfile": {
                                                                                                        "properties": {
                                                                                                            "adminUsername": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "osConfiguration": {
                                                                                                                "properties": {
                                                                                                                    "disablePasswordAuthentication": {
                                                                                                                        "type": "boolean"
                                                                                                                    },
                                                                                                                    "osType": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "sshKeyPair": {
                                                                                                                        "properties": {
                                                                                                                            "publicKey": {
                                                                                                                                "type": "string"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "type": "object"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "vmSize": {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "deploymentType": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "highAvailabilityConfig": {
                                                                                        "properties": {
                                                                                            "highAvailabilityType": {
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "storageConfiguration": {
                                                                                        "properties": {
                                                                                            "transportFileShareConfiguration": {
                                                                                                "properties": {
                                                                                                    "configurationType": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "resourceGroup": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "storageAccountName": {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "osSapConfiguration": {
                                                                                "properties": {
                                                                                    "sapFqdn": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "softwareConfiguration": {
                                                                                "properties": {
                                                                                    "bomUrl": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "highAvailabilitySoftwareConfiguration": {
                                                                                        "properties": {
                                                                                            "fencingClientId": {
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "sapBitsStorageAccountId": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "softwareInstallationType": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "softwareVersion": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "environment": {
                                                                        "type": "string"
                                                                    },
                                                                    "health": {
                                                                        "type": "string"
                                                                    },
                                                                    "managedResourceGroupConfiguration": {
                                                                        "properties": {
                                                                            "name": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "managedResourcesNetworkAccessType": {
                                                                        "type": "string"
                                                                    },
                                                                    "provisioningState": {
                                                                        "type": "string"
                                                                    },
                                                                    "sapProduct": {
                                                                        "type": "string"
                                                                    },
                                                                    "state": {
                                                                        "type": "string"
                                                                    },
                                                                    "status": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "systemData": {
                                                                "properties": {
                                                                    "createdAt": {
                                                                        "type": "string"
                                                                    },
                                                                    "createdBy": {
                                                                        "type": "string"
                                                                    },
                                                                    "createdByType": {
                                                                        "type": "string"
                                                                    },
                                                                    "lastModifiedAt": {
                                                                        "type": "string"
                                                                    },
                                                                    "lastModifiedBy": {
                                                                        "type": "string"
                                                                    },
                                                                    "lastModifiedByType": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "runAfter": {
                                                    "Read_current_status_of_VIS__to_check_if_running": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "ParseJson"
                                            },
                                            "Read_current_status_of_VIS__to_check_if_running": {
                                                "inputs": {
                                                    "host": {
                                                        "connection": {
                                                            "name": "@parameters('$connections')['arm-1']['connectionId']"
                                                        }
                                                    },
                                                    "method": "get",
                                                    "path": "/subscriptions/@{encodeURIComponent(split(items('For_each_VIS_resource_start'), '/')[2])}/resourcegroups/@{encodeURIComponent(split(items('For_each_VIS_resource_start'), '/')[4])}/providers/@{encodeURIComponent('Microsoft.Workloads')}/@{encodeURIComponent('sapVirtualInstances/',split(items('For_each_VIS_resource_start'), '/')[8])}",
                                                    "queries": {
                                                        "x-ms-api-version": "2023-10-01-preview"
                                                    }
                                                },
                                                "type": "ApiConnection"
                                            }
                                        },
                                        "expression": "@not(contains(variables('Temp Array with Stopped VIS [Start]'),items('For_each_VIS_resource_start')))",
                                        "limit": {
                                            "count": 20,
                                            "timeout": "PT1H"
                                        },
                                        "runAfter": {
                                            "Assume_VIS_to_be_stopped": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "Until"
                                    }
                                },
                                "else": {
                                    "actions": {}
                                },
                                "expression": {
                                    "and": [
                                        {
                                            "not": {
                                                "contains": [
                                                    "@variables('VIS with unavailable database instances')",
                                                    "@items('For_each_VIS_resource_start')"
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "runAfter": {
                                    "Database_start_operation": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "If"
                            },
                            "Database_start_operation": {
                                "actions": {
                                    "For_each_DB_instance_start": {
                                        "actions": {
                                            "Check_if_DB_instance_is_in_Offline_State._Trigger_start_if_true": {
                                                "actions": {
                                                    "Append_to_array_variable": {
                                                        "inputs": {
                                                            "name": "Offline Database Instances",
                                                            "value": "@body('Parse_JSON_for_Database_Instance_information')?['id']"
                                                        },
                                                        "type": "AppendToArrayVariable"
                                                    },
                                                    "Check_if_database_instance_successfully_started": {
                                                        "actions": {},
                                                        "else": {
                                                            "actions": {
                                                                "Add_VIS_with_failed_start_database_instances_to_another_array": {
                                                                    "inputs": {
                                                                        "name": "VIS with unavailable database instances",
                                                                        "value": "@items('For_each_VIS_resource_start')"
                                                                    },
                                                                    "runAfter": {
                                                                        "Set_Logic_App_Success_to_false_as_DB_Instance_is_not_running": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "type": "AppendToArrayVariable"
                                                                },
                                                                "Append_DB_Instance_details_to_List_of_error_resources": {
                                                                    "inputs": {
                                                                        "name": "ErrorResources",
                                                                        "value": "@body('Parse_db_instance_status')?['id']"
                                                                    },
                                                                    "type": "AppendToArrayVariable"
                                                                },
                                                                "Set_Logic_App_Success_to_false_as_DB_Instance_is_not_running": {
                                                                    "inputs": {
                                                                        "name": "LogicAppSuccessExecution",
                                                                        "value": false
                                                                    },
                                                                    "runAfter": {
                                                                        "Append_DB_Instance_details_to_List_of_error_resources": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "type": "SetVariable"
                                                                }
                                                            }
                                                        },
                                                        "expression": {
                                                            "and": [
                                                                {
                                                                    "not": {
                                                                        "contains": [
                                                                            "@variables('Offline Database Instances')",
                                                                            "@body('Read_db_instance_status')?['id']"
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "runAfter": {
                                                            "Until": [
                                                                "Succeeded"
                                                            ]
                                                        },
                                                        "type": "If"
                                                    },
                                                    "Initiate_database_instance_start": {
                                                        "inputs": {
                                                            "host": {
                                                                "connection": {
                                                                    "name": "@parameters('$connections')['arm']['connectionId']"
                                                                }
                                                            },
                                                            "method": "post",
                                                            "path": "/subscriptions/@{encodeURIComponent(split(items('For_each_VIS_resource_start'), '/')[2])}/resourcegroups/@{encodeURIComponent(split(items('For_each_VIS_resource_start'), '/')[4])}/providers/@{encodeURIComponent('Microsoft.Workloads')}/@{encodeURIComponent('sapVirtualInstances/',split(items('For_each_VIS_resource_start'), '/')[8],'/databaseinstances/',item()?['name'])}/@{encodeURIComponent(parameters('OperationName'))}",
                                                            "queries": {
                                                                "x-ms-api-version": "2023-10-01-preview"
                                                            }
                                                        },
                                                        "runAfter": {
                                                            "Append_to_array_variable": [
                                                                "Succeeded"
                                                            ]
                                                        },
                                                        "type": "ApiConnection"
                                                    },
                                                    "Until": {
                                                        "actions": {
                                                            "Check_if_status_is_running": {
                                                                "actions": {
                                                                    "Remove_database_instance_from_list_of_Offline_Resources": {
                                                                        "inputs": {
                                                                            "from": "@variables('Offline Database Instances')",
                                                                            "where": "@not(equals('items()',body('Parse_JSON_for_Database_Instance_information')?['id']))"
                                                                        },
                                                                        "type": "Query"
                                                                    },
                                                                    "Set_Offline_Resources_Array": {
                                                                        "inputs": {
                                                                            "name": "Offline Database Instances",
                                                                            "value": "@body('Remove_database_instance_from_list_of_Offline_Resources')"
                                                                        },
                                                                        "runAfter": {
                                                                            "Remove_database_instance_from_list_of_Offline_Resources": [
                                                                                "Succeeded"
                                                                            ]
                                                                        },
                                                                        "type": "SetVariable"
                                                                    }
                                                                },
                                                                "else": {
                                                                    "actions": {}
                                                                },
                                                                "expression": {
                                                                    "and": [
                                                                        {
                                                                            "equals": [
                                                                                "@body('Parse_db_instance_status')?['properties']?['status']",
                                                                                "Running"
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                "runAfter": {
                                                                    "Parse_db_instance_status": [
                                                                        "Succeeded"
                                                                    ]
                                                                },
                                                                "type": "If"
                                                            },
                                                            "Parse_db_instance_status": {
                                                                "inputs": {
                                                                    "content": "@body('Read_db_instance_status')",
                                                                    "schema": {
                                                                        "properties": {
                                                                            "id": {
                                                                                "type": "string"
                                                                            },
                                                                            "location": {
                                                                                "type": "string"
                                                                            },
                                                                            "name": {
                                                                                "type": "string"
                                                                            },
                                                                            "properties": {
                                                                                "properties": {
                                                                                    "databaseSid": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "databaseType": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "ipAddress": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "loadBalancerDetails": {
                                                                                        "properties": {
                                                                                            "id": {
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "provisioningState": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "status": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "subnet": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "vmDetails": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "status": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "virtualMachineId": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "required": [
                                                                                                "virtualMachineId",
                                                                                                "status"
                                                                                            ],
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "systemData": {
                                                                                "properties": {
                                                                                    "createdAt": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "createdBy": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "createdByType": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "lastModifiedAt": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "lastModifiedBy": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "lastModifiedByType": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "tags": {
                                                                                "properties": {
                                                                                    "CleanUpAfter": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "type": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "runAfter": {
                                                                    "Read_db_instance_status": [
                                                                        "Succeeded"
                                                                    ]
                                                                },
                                                                "type": "ParseJson"
                                                            },
                                                            "Read_db_instance_status": {
                                                                "inputs": {
                                                                    "host": {
                                                                        "connection": {
                                                                            "name": "@parameters('$connections')['arm-1']['connectionId']"
                                                                        }
                                                                    },
                                                                    "method": "get",
                                                                    "path": "/subscriptions/@{encodeURIComponent(split(items('For_each_VIS_resource_start'), '/')[2])}/resourcegroups/@{encodeURIComponent(split(items('For_each_VIS_resource_start'), '/')[4])}/providers/@{encodeURIComponent('Microsoft.Workloads')}/@{encodeURIComponent('sapVirtualInstances/',split(items('For_each_VIS_resource_start'), '/')[8],'/databaseInstances/',body('Read_database_instance_start_operation_response')?['name'])}",
                                                                    "queries": {
                                                                        "x-ms-api-version": "2023-10-01-preview"
                                                                    }
                                                                },
                                                                "type": "ApiConnection"
                                                            },
                                                            "Wait_for_1_minute_before_running_next_iteration_1": {
                                                                "inputs": {
                                                                    "interval": {
                                                                        "count": 1,
                                                                        "unit": "Minute"
                                                                    }
                                                                },
                                                                "runAfter": {
                                                                    "Check_if_status_is_running": [
                                                                        "Succeeded"
                                                                    ]
                                                                },
                                                                "type": "Wait"
                                                            }
                                                        },
                                                        "expression": "@contains(variables('Offline Database Instances'),body('Parse_JSON_for_Database_Instance_information')?['id'])",
                                                        "limit": {
                                                            "count": 30,
                                                            "timeout": "PT1H"
                                                        },
                                                        "runAfter": {
                                                            "Initiate_database_instance_start": [
                                                                "Succeeded"
                                                            ]
                                                        },
                                                        "type": "Until"
                                                    }
                                                },
                                                "else": {
                                                    "actions": {
                                                        "ChecK": {
                                                            "actions": {},
                                                            "else": {
                                                                "actions": {
                                                                    "Add_VIS_to_another_array_due_to_VM_Agent_not_started": {
                                                                        "inputs": {
                                                                            "name": "VIS with unavailable database instances",
                                                                            "value": "@items('For_each_VIS_resource_start')"
                                                                        },
                                                                        "type": "AppendToArrayVariable"
                                                                    },
                                                                    "Append_DB_Instance_details_to_Listed": {
                                                                        "inputs": {
                                                                            "name": "ErrorResources",
                                                                            "value": "@items('For_each_DB_instance_start')"
                                                                        },
                                                                        "runAfter": {
                                                                            "Set_Logic_App_Success_to_false_as_as_VM_Agent_not_started": [
                                                                                "Succeeded"
                                                                            ]
                                                                        },
                                                                        "type": "AppendToArrayVariable"
                                                                    },
                                                                    "Set_Logic_App_Success_to_false_as_as_VM_Agent_not_started": {
                                                                        "inputs": {
                                                                            "name": "LogicAppSuccessExecution",
                                                                            "value": false
                                                                        },
                                                                        "runAfter": {
                                                                            "Add_VIS_to_another_array_due_to_VM_Agent_not_started": [
                                                                                "Succeeded"
                                                                            ]
                                                                        },
                                                                        "type": "SetVariable"
                                                                    }
                                                                }
                                                            },
                                                            "expression": {
                                                                "and": [
                                                                    {
                                                                        "equals": [
                                                                            "@body('Parse_JSON_for_Database_Instance_information')?['properties']?['status']",
                                                                            "Running"
                                                                        ]
                                                                    }
                                                                ]
                                                            },
                                                            "type": "If"
                                                        }
                                                    }
                                                },
                                                "expression": {
                                                    "and": [
                                                        {
                                                            "equals": [
                                                                "@body('Parse_JSON_for_Database_Instance_information')?['properties']?['status']",
                                                                "Offline"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "runAfter": {
                                                    "Wait_for_10_minues_for_Database_to_come_in_Offline_State_from_Unavailable": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "If"
                                            },
                                            "For_each_Db_VM_start": {
                                                "actions": {
                                                    "Invoke_Start_Operation_on_database_VM": {
                                                        "inputs": {
                                                            "host": {
                                                                "connection": {
                                                                    "name": "@parameters('$connections')['arm-1']['connectionId']"
                                                                }
                                                            },
                                                            "method": "post",
                                                            "path": "/subscriptions/@{encodeURIComponent(split(items('For_each_Db_VM_start')['virtualMachineId'], '/')[2])}/resourcegroups/@{encodeURIComponent(split(items('For_each_Db_VM_start')['virtualMachineId'], '/')[4])}/providers/@{encodeURIComponent('Microsoft.Compute')}/@{encodeURIComponent('virtualMachines/',split(items('For_each_Db_VM_start')['virtualMachineId'], '/')[8])}/@{encodeURIComponent('start')}",
                                                            "queries": {
                                                                "x-ms-api-version": "2019-12-01"
                                                            }
                                                        },
                                                        "type": "ApiConnection"
                                                    }
                                                },
                                                "foreach": "@item()?['properties']?['vmDetails']",
                                                "type": "Foreach"
                                            },
                                            "Parse_JSON_for_Database_Instance_information": {
                                                "inputs": {
                                                    "content": "@body('Read_database_instance__information')",
                                                    "schema": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "string"
                                                            },
                                                            "location": {
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "properties": {
                                                                "properties": {
                                                                    "databaseSid": {
                                                                        "type": "string"
                                                                    },
                                                                    "databaseType": {
                                                                        "type": "string"
                                                                    },
                                                                    "ipAddress": {
                                                                        "type": "string"
                                                                    },
                                                                    "loadBalancerDetails": {
                                                                        "properties": {
                                                                            "id": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "provisioningState": {
                                                                        "type": "string"
                                                                    },
                                                                    "status": {
                                                                        "type": "string"
                                                                    },
                                                                    "subnet": {
                                                                        "type": "string"
                                                                    },
                                                                    "vmDetails": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "status": {
                                                                                    "type": "string"
                                                                                },
                                                                                "virtualMachineId": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "virtualMachineId",
                                                                                "status"
                                                                            ],
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "systemData": {
                                                                "properties": {
                                                                    "createdAt": {
                                                                        "type": "string"
                                                                    },
                                                                    "createdBy": {
                                                                        "type": "string"
                                                                    },
                                                                    "createdByType": {
                                                                        "type": "string"
                                                                    },
                                                                    "lastModifiedAt": {
                                                                        "type": "string"
                                                                    },
                                                                    "lastModifiedBy": {
                                                                        "type": "string"
                                                                    },
                                                                    "lastModifiedByType": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "tags": {
                                                                "properties": {
                                                                    "CleanUpAfter": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "runAfter": {
                                                    "Read_database_instance__information": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "ParseJson"
                                            },
                                            "Read_database_instance__information": {
                                                "inputs": {
                                                    "host": {
                                                        "connection": {
                                                            "name": "@parameters('$connections')['arm']['connectionId']"
                                                        }
                                                    },
                                                    "method": "get",
                                                    "path": "/subscriptions/@{encodeURIComponent(split(items('For_each_VIS_resource_start'), '/')[2])}/resourcegroups/@{encodeURIComponent(split(items('For_each_VIS_resource_start'), '/')[4])}/providers/@{encodeURIComponent('Microsoft.Workloads')}/@{encodeURIComponent('sapVirtualInstances/',split(items('For_each_VIS_resource_start'), '/')[8],'/databaseInstances/',item()?['name'])}",
                                                    "queries": {
                                                        "x-ms-api-version": "2023-10-01-preview"
                                                    }
                                                },
                                                "runAfter": {
                                                    "For_each_Db_VM_start": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "ApiConnection"
                                            },
                                            "Wait_for_10_minues_for_Database_to_come_in_Offline_State_from_Unavailable": {
                                                "inputs": {
                                                    "interval": {
                                                        "count": 10,
                                                        "unit": "Minute"
                                                    }
                                                },
                                                "runAfter": {
                                                    "Parse_JSON_for_Database_Instance_information": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "Wait"
                                            }
                                        },
                                        "foreach": "@body('Parse_database_instance_start_operation_response')?['value']",
                                        "runAfter": {
                                            "Parse_database_instance_start_operation_response": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "Foreach"
                                    },
                                    "Parse_database_instance_start_operation_response": {
                                        "inputs": {
                                            "content": "@body('Read_database_instance_start_operation_response')",
                                            "schema": {
                                                "properties": {
                                                    "value": {
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "string"
                                                                },
                                                                "location": {
                                                                    "type": "string"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                },
                                                                "properties": {
                                                                    "properties": {
                                                                        "databaseSid": {
                                                                            "type": "string"
                                                                        },
                                                                        "databaseType": {
                                                                            "type": "string"
                                                                        },
                                                                        "ipAddress": {
                                                                            "type": "string"
                                                                        },
                                                                        "provisioningState": {
                                                                            "type": "string"
                                                                        },
                                                                        "status": {
                                                                            "type": "string"
                                                                        },
                                                                        "subnet": {
                                                                            "type": "string"
                                                                        },
                                                                        "vmDetails": {
                                                                            "items": {
                                                                                "properties": {
                                                                                    "virtualMachineId": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "virtualMachineId"
                                                                                ],
                                                                                "type": "object"
                                                                            },
                                                                            "type": "array"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "systemData": {
                                                                    "properties": {
                                                                        "createdAt": {
                                                                            "type": "string"
                                                                        },
                                                                        "createdBy": {
                                                                            "type": "string"
                                                                        },
                                                                        "createdByType": {
                                                                            "type": "string"
                                                                        },
                                                                        "lastModifiedAt": {
                                                                            "type": "string"
                                                                        },
                                                                        "lastModifiedBy": {
                                                                            "type": "string"
                                                                        },
                                                                        "lastModifiedByType": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "id",
                                                                "name",
                                                                "type",
                                                                "location",
                                                                "systemData",
                                                                "properties"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "runAfter": {
                                            "Read_database_instance_start_operation_response": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "ParseJson"
                                    },
                                    "Read_database_instance_start_operation_response": {
                                        "inputs": {
                                            "host": {
                                                "connection": {
                                                    "name": "@parameters('$connections')['arm']['connectionId']"
                                                }
                                            },
                                            "method": "get",
                                            "path": "/subscriptions/@{encodeURIComponent(split(items('For_each_VIS_resource_start'), '/')[2])}/resourcegroups/@{encodeURIComponent(split(items('For_each_VIS_resource_start'), '/')[4])}/providers/@{encodeURIComponent('Microsoft.Workloads')}/@{encodeURIComponent('sapVirtualInstances/',split(items('For_each_VIS_resource_start'), '/')[8],'/databaseInstances')}",
                                            "queries": {
                                                "x-ms-api-version": "2023-10-01-preview"
                                            }
                                        },
                                        "type": "ApiConnection"
                                    }
                                },
                                "else": {
                                    "actions": {}
                                },
                                "expression": {
                                    "and": [
                                        {
                                            "equals": [
                                                "@parameters('IncludeDatabaseOperations')",
                                                true
                                            ]
                                        },
                                        {
                                            "equals": [
                                                "",
                                                ""
                                            ]
                                        }
                                    ]
                                },
                                "runAfter": {
                                    "For_each_central_instance_to_start": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "If"
                            },
                            "For_each_central_instance_to_start": {
                                "actions": {
                                    "Start_all_central_VMs": {
                                        "actions": {
                                            "Start_cs_vms": {
                                                "inputs": {
                                                    "host": {
                                                        "connection": {
                                                            "name": "@parameters('$connections')['arm-1']['connectionId']"
                                                        }
                                                    },
                                                    "method": "post",
                                                    "path": "/subscriptions/@{encodeURIComponent(split(items('Start_all_central_VMs')['virtualMachineId'], '/')[2])}/resourcegroups/@{encodeURIComponent(split(items('Start_all_central_VMs')['virtualMachineId'], '/')[4])}/providers/@{encodeURIComponent('Microsoft.Compute')}/@{encodeURIComponent('virtualMachines/',split(items('Start_all_central_VMs')['virtualMachineId'], '/')[8])}/@{encodeURIComponent('start')}",
                                                    "queries": {
                                                        "x-ms-api-version": "2019-12-01"
                                                    }
                                                },
                                                "type": "ApiConnection"
                                            }
                                        },
                                        "foreach": "@items('For_each_central_instance_to_start')?['properties']?['vmDetails']",
                                        "type": "Foreach"
                                    }
                                },
                                "foreach": "@outputs('Parse_Central_Instance_Information_to_start')?['body']?['value']",
                                "runAfter": {
                                    "Parse_Central_Instance_Information_to_start": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "Foreach"
                            },
                            "Get_Central_Instances_of_the_VIS_to_start": {
                                "inputs": {
                                    "host": {
                                        "connection": {
                                            "name": "@parameters('$connections')['arm']['connectionId']"
                                        }
                                    },
                                    "method": "get",
                                    "path": "/subscriptions/@{encodeURIComponent(split(items('For_each_VIS_resource_start'), '/')[2])}/resourcegroups/@{encodeURIComponent(split(items('For_each_VIS_resource_start'), '/')[4])}/providers/@{encodeURIComponent('Microsoft.Workloads')}/@{encodeURIComponent('sapVirtualInstances/',split(items('For_each_VIS_resource_start'), '/')[8],'/centralInstances')}",
                                    "queries": {
                                        "x-ms-api-version": "2023-10-01-preview"
                                    }
                                },
                                "type": "ApiConnection"
                            },
                            "Parse_Central_Instance_Information_to_start": {
                                "inputs": {
                                    "content": "@body('Get_Central_Instances_of_the_VIS_to_start')",
                                    "schema": {
                                        "properties": {
                                            "value": {
                                                "items": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "string"
                                                        },
                                                        "location": {
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "properties": {
                                                            "properties": {
                                                                "enqueueServerProperties": {
                                                                    "properties": {
                                                                        "health": {
                                                                            "type": "string"
                                                                        },
                                                                        "ipAddress": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "gatewayServerProperties": {
                                                                    "properties": {
                                                                        "health": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "health": {
                                                                    "type": "string"
                                                                },
                                                                "instanceNo": {
                                                                    "type": "string"
                                                                },
                                                                "messageServerProperties": {
                                                                    "properties": {
                                                                        "health": {
                                                                            "type": "string"
                                                                        },
                                                                        "ipAddress": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "provisioningState": {
                                                                    "type": "string"
                                                                },
                                                                "status": {
                                                                    "type": "string"
                                                                },
                                                                "subnet": {
                                                                    "type": "string"
                                                                },
                                                                "vmDetails": {
                                                                    "items": {
                                                                        "properties": {
                                                                            "virtualMachineId": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "virtualMachineId"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "systemData": {
                                                            "properties": {
                                                                "createdAt": {
                                                                    "type": "string"
                                                                },
                                                                "createdBy": {
                                                                    "type": "string"
                                                                },
                                                                "createdByType": {
                                                                    "type": "string"
                                                                },
                                                                "lastModifiedAt": {
                                                                    "type": "string"
                                                                },
                                                                "lastModifiedBy": {
                                                                    "type": "string"
                                                                },
                                                                "lastModifiedByType": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "id",
                                                        "name",
                                                        "type",
                                                        "location",
                                                        "systemData",
                                                        "properties"
                                                    ],
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "runAfter": {
                                    "Get_Central_Instances_of_the_VIS_to_start": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "ParseJson"
                            }
                        },
                        "foreach": "@parameters('ResourceName')",
                        "runtimeConfiguration": {
                            "concurrency": {
                                "repetitions": 20
                            }
                        },
                        "type": "Foreach"
                    }
                },
                "else": {
                    "actions": {
                        "For_each_VIS_resource_stop": {
                            "actions": {
                                "Assume_VIS_is_running_by_adding_it_to_runningVISArray": {
                                    "inputs": {
                                        "name": "Temp Array with Running VIS [Stop]",
                                        "value": "@items('For_each_VIS_resource_stop')"
                                    },
                                    "runAfter": {
                                        "Initiate_VIS_resource_stop": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "AppendToArrayVariable"
                                },
                                "Check_if_Infra_Stop_Operation": {
                                    "actions": {
                                        "For_each_app_instance_to_stop": {
                                            "actions": {
                                                "Deallocate_App_VMs": {
                                                    "actions": {
                                                        "Deallocate_app_VM": {
                                                            "inputs": {
                                                                "host": {
                                                                    "connection": {
                                                                        "name": "@parameters('$connections')['arm-1']['connectionId']"
                                                                    }
                                                                },
                                                                "method": "post",
                                                                "path": "/subscriptions/@{encodeURIComponent(split(items('Deallocate_App_VMs')['virtualMachineId'], '/')[2])}/resourcegroups/@{encodeURIComponent(split(items('Deallocate_App_VMs')['virtualMachineId'], '/')[4])}/providers/@{encodeURIComponent('Microsoft.Compute')}/@{encodeURIComponent('virtualMachines/',split(items('Deallocate_App_VMs')['virtualMachineId'], '/')[8])}/@{encodeURIComponent('deallocate')}",
                                                                "queries": {
                                                                    "x-ms-api-version": "2019-12-01"
                                                                }
                                                            },
                                                            "type": "ApiConnection"
                                                        }
                                                    },
                                                    "foreach": "@item()?['properties']?['vmDetails']",
                                                    "type": "Foreach"
                                                }
                                            },
                                            "foreach": "@outputs('Parse_App_Instance_Information')?['body']?['value']",
                                            "runAfter": {
                                                "Parse_App_Instance_Information": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Foreach"
                                        },
                                        "For_each_central_instance_to_stop": {
                                            "actions": {
                                                "Deallocate_CS_VMs": {
                                                    "actions": {
                                                        "Deallocate_Central_Server_VMs": {
                                                            "inputs": {
                                                                "host": {
                                                                    "connection": {
                                                                        "name": "@parameters('$connections')['arm-1']['connectionId']"
                                                                    }
                                                                },
                                                                "method": "post",
                                                                "path": "/subscriptions/@{encodeURIComponent(split(items('Deallocate_CS_VMs')['virtualMachineId'], '/')[2])}/resourcegroups/@{encodeURIComponent(split(items('Deallocate_CS_VMs')['virtualMachineId'], '/')[4])}/providers/@{encodeURIComponent('Microsoft.Compute')}/@{encodeURIComponent('virtualMachines/',split(items('Deallocate_CS_VMs')['virtualMachineId'], '/')[8])}/@{encodeURIComponent('deallocate')}",
                                                                "queries": {
                                                                    "x-ms-api-version": "2019-12-01"
                                                                }
                                                            },
                                                            "type": "ApiConnection"
                                                        }
                                                    },
                                                    "foreach": "@item()?['properties']?['vmDetails']",
                                                    "type": "Foreach"
                                                }
                                            },
                                            "foreach": "@outputs('Parse_Central_Instance_Information_for_the_VIS')?['body']?['value']",
                                            "runAfter": {
                                                "Parse_Central_Instance_Information_for_the_VIS": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Foreach"
                                        },
                                        "Get_App_Instances_of_the_VIS": {
                                            "inputs": {
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['arm']['connectionId']"
                                                    }
                                                },
                                                "method": "get",
                                                "path": "/subscriptions/@{encodeURIComponent(split(items('For_each_VIS_resource_stop'), '/')[2])}/resourcegroups/@{encodeURIComponent(split(items('For_each_VIS_resource_stop'), '/')[4])}/providers/@{encodeURIComponent('Microsoft.Workloads')}/@{encodeURIComponent('sapVirtualInstances/',split(items('For_each_VIS_resource_stop'), '/')[8],'/applicationInstances')}",
                                                "queries": {
                                                    "x-ms-api-version": "2023-10-01-preview"
                                                }
                                            },
                                            "type": "ApiConnection"
                                        },
                                        "Get_Central_Instances_of_the_VIS": {
                                            "inputs": {
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['arm']['connectionId']"
                                                    }
                                                },
                                                "method": "get",
                                                "path": "/subscriptions/@{encodeURIComponent(split(items('For_each_VIS_resource_stop'), '/')[2])}/resourcegroups/@{encodeURIComponent(split(items('For_each_VIS_resource_stop'), '/')[4])}/providers/@{encodeURIComponent('Microsoft.Workloads')}/@{encodeURIComponent('sapVirtualInstances/',split(items('For_each_VIS_resource_stop'), '/')[8],'/centralInstances')}",
                                                "queries": {
                                                    "x-ms-api-version": "2023-10-01-preview"
                                                }
                                            },
                                            "type": "ApiConnection"
                                        },
                                        "Parse_App_Instance_Information": {
                                            "inputs": {
                                                "content": "@body('Get_App_Instances_of_the_VIS')",
                                                "schema": {
                                                    "properties": {
                                                        "value": {
                                                            "items": {
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "string"
                                                                    },
                                                                    "location": {
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "type": "string"
                                                                    },
                                                                    "properties": {
                                                                        "properties": {
                                                                            "enqueueServerProperties": {
                                                                                "properties": {
                                                                                    "health": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "ipAddress": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "gatewayServerProperties": {
                                                                                "properties": {
                                                                                    "health": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "health": {
                                                                                "type": "string"
                                                                            },
                                                                            "instanceNo": {
                                                                                "type": "string"
                                                                            },
                                                                            "messageServerProperties": {
                                                                                "properties": {
                                                                                    "health": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "ipAddress": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "provisioningState": {
                                                                                "type": "string"
                                                                            },
                                                                            "status": {
                                                                                "type": "string"
                                                                            },
                                                                            "subnet": {
                                                                                "type": "string"
                                                                            },
                                                                            "vmDetails": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "virtualMachineId": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "virtualMachineId"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "systemData": {
                                                                        "properties": {
                                                                            "createdAt": {
                                                                                "type": "string"
                                                                            },
                                                                            "createdBy": {
                                                                                "type": "string"
                                                                            },
                                                                            "createdByType": {
                                                                                "type": "string"
                                                                            },
                                                                            "lastModifiedAt": {
                                                                                "type": "string"
                                                                            },
                                                                            "lastModifiedBy": {
                                                                                "type": "string"
                                                                            },
                                                                            "lastModifiedByType": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "type": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "id",
                                                                    "name",
                                                                    "type",
                                                                    "location",
                                                                    "systemData",
                                                                    "properties"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "runAfter": {
                                                "Get_App_Instances_of_the_VIS": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ParseJson"
                                        },
                                        "Parse_Central_Instance_Information_for_the_VIS": {
                                            "inputs": {
                                                "content": "@body('Get_Central_Instances_of_the_VIS')",
                                                "schema": {
                                                    "properties": {
                                                        "value": {
                                                            "items": {
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "string"
                                                                    },
                                                                    "location": {
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "type": "string"
                                                                    },
                                                                    "properties": {
                                                                        "properties": {
                                                                            "enqueueServerProperties": {
                                                                                "properties": {
                                                                                    "health": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "ipAddress": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "gatewayServerProperties": {
                                                                                "properties": {
                                                                                    "health": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "health": {
                                                                                "type": "string"
                                                                            },
                                                                            "instanceNo": {
                                                                                "type": "string"
                                                                            },
                                                                            "messageServerProperties": {
                                                                                "properties": {
                                                                                    "health": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "ipAddress": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "provisioningState": {
                                                                                "type": "string"
                                                                            },
                                                                            "status": {
                                                                                "type": "string"
                                                                            },
                                                                            "subnet": {
                                                                                "type": "string"
                                                                            },
                                                                            "vmDetails": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "virtualMachineId": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "virtualMachineId"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "systemData": {
                                                                        "properties": {
                                                                            "createdAt": {
                                                                                "type": "string"
                                                                            },
                                                                            "createdBy": {
                                                                                "type": "string"
                                                                            },
                                                                            "createdByType": {
                                                                                "type": "string"
                                                                            },
                                                                            "lastModifiedAt": {
                                                                                "type": "string"
                                                                            },
                                                                            "lastModifiedBy": {
                                                                                "type": "string"
                                                                            },
                                                                            "lastModifiedByType": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "type": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "id",
                                                                    "name",
                                                                    "type",
                                                                    "location",
                                                                    "systemData",
                                                                    "properties"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "runAfter": {
                                                "Get_Central_Instances_of_the_VIS": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ParseJson"
                                        }
                                    },
                                    "else": {
                                        "actions": {}
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "not": {
                                                    "contains": [
                                                        "@variables('ErrorResources')",
                                                        "@body('Parse_VIS_Details')?['id']"
                                                    ]
                                                }
                                            },
                                            {
                                                "not": {
                                                    "contains": [
                                                        "@variables('VIS with running database instances')",
                                                        "@body('Parse_VIS_Details')?['id']"
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "runAfter": {
                                        "Database_stop_operation": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Check_if_VIS_is_still_not_stopped": {
                                    "actions": {
                                        "Append_VIS_Details_to_Error_Array_because_it_did_not_stop_successfully": {
                                            "inputs": {
                                                "name": "ErrorResources",
                                                "value": "@items('For_each_VIS_resource_stop')"
                                            },
                                            "type": "AppendToArrayVariable"
                                        },
                                        "Set_Logic_App_Success_to_false_as_Stop_VIS_has_failed": {
                                            "inputs": {
                                                "name": "LogicAppSuccessExecution",
                                                "value": false
                                            },
                                            "runAfter": {
                                                "Append_VIS_Details_to_Error_Array_because_it_did_not_stop_successfully": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable"
                                        }
                                    },
                                    "else": {
                                        "actions": {}
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "contains": [
                                                    "@variables('Temp Array with Running VIS [Stop]')",
                                                    "@body('Read_current_status_of_VIS')?['id']"
                                                ]
                                            }
                                        ]
                                    },
                                    "runAfter": {
                                        "Until_VIS_is_running": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Database_stop_operation": {
                                    "actions": {
                                        "For_each_DB_instance_stop": {
                                            "actions": {
                                                "Append_db_instance_to_array": {
                                                    "inputs": {
                                                        "name": "Running Database Instances",
                                                        "value": "@item()?['id']"
                                                    },
                                                    "type": "AppendToArrayVariable"
                                                },
                                                "Check_if_Db_instance_has_is_not_stopped": {
                                                    "actions": {
                                                        "Add_to_Array_with_VIS_containing_running_database_instances": {
                                                            "inputs": {
                                                                "name": "VIS with running database instances",
                                                                "value": "@body('Parse_VIS_Details')?['id']"
                                                            },
                                                            "runAfter": {
                                                                "Append_DB_Instance_details_to_Error_Array_because_it_did_not_stop": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "AppendToArrayVariable"
                                                        },
                                                        "Append_DB_Instance_details_to_Error_Array_because_it_did_not_stop": {
                                                            "inputs": {
                                                                "name": "ErrorResources",
                                                                "value": "@body('Read_current_status_of_database_instance_for_stop')?['id']"
                                                            },
                                                            "type": "AppendToArrayVariable"
                                                        },
                                                        "Set_Logic_App_Successful_Execution_to_be_false_as_Stop_failed_on_DB_Instance": {
                                                            "inputs": {
                                                                "name": "LogicAppSuccessExecution",
                                                                "value": false
                                                            },
                                                            "runAfter": {
                                                                "Add_to_Array_with_VIS_containing_running_database_instances": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "SetVariable"
                                                        }
                                                    },
                                                    "else": {
                                                        "actions": {}
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "contains": [
                                                                    "@variables('Running Database Instances')",
                                                                    "@body('Parse_db_instance_details')?['id']"
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "runAfter": {
                                                        "Until_Db_Instance_is_running": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "If"
                                                },
                                                "Initiate_database_instance_stop": {
                                                    "inputs": {
                                                        "body": {
                                                            "deallocateVm": "@parameters('IncludeVirtualMachineOperation')",
                                                            "softStopTimeoutSeconds": "@parameters('SoftStopTimeout')"
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['arm']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/subscriptions/@{encodeURIComponent(split(items('For_each_VIS_resource_stop'), '/')[2])}/resourcegroups/@{encodeURIComponent(split(items('For_each_VIS_resource_stop'), '/')[4])}/providers/@{encodeURIComponent('Microsoft.Workloads')}/@{encodeURIComponent('sapVirtualInstances/',split(items('For_each_VIS_resource_stop'), '/')[8],'/databaseinstances/',items('For_each_DB_instance_stop')?['name'])}/@{encodeURIComponent(parameters('OperationName'))}",
                                                        "queries": {
                                                            "x-ms-api-version": "2023-10-01-preview"
                                                        }
                                                    },
                                                    "runAfter": {
                                                        "Append_db_instance_to_array": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection"
                                                },
                                                "Until_Db_Instance_is_running": {
                                                    "actions": {
                                                        "Check_if_database_instance_is_not_running": {
                                                            "actions": {
                                                                "Remove_database_instance_from_Array": {
                                                                    "inputs": {
                                                                        "from": "@variables('Running Database Instances')",
                                                                        "where": "@not(equals(item(),body('Parse_db_instance_details')?['id']))"
                                                                    },
                                                                    "type": "Query"
                                                                },
                                                                "Set_temporary_array_with_running_VIS": {
                                                                    "inputs": {
                                                                        "name": "Running Database Instances",
                                                                        "value": "@body('Remove_database_instance_from_Array')"
                                                                    },
                                                                    "runAfter": {
                                                                        "Remove_database_instance_from_Array": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "type": "SetVariable"
                                                                }
                                                            },
                                                            "else": {
                                                                "actions": {
                                                                    "Delay_for_max(15_min,_softStopTimeout)": {
                                                                        "inputs": {
                                                                            "interval": {
                                                                                "count": "@max(900, parameters('SoftStopTimeout'))",
                                                                                "unit": "Second"
                                                                            }
                                                                        },
                                                                        "type": "Wait"
                                                                    }
                                                                }
                                                            },
                                                            "expression": {
                                                                "or": [
                                                                    {
                                                                        "equals": [
                                                                            "@body('Parse_db_instance_details')?['properties']?['status']",
                                                                            "Offline"
                                                                        ]
                                                                    },
                                                                    {
                                                                        "equals": [
                                                                            "@body('Parse_db_instance_details')?['properties']?['status']",
                                                                            "Unavailable"
                                                                        ]
                                                                    },
                                                                    {
                                                                        "not": {
                                                                            "equals": [
                                                                                "@body('Parse_db_instance_details')?['properties']?['status']",
                                                                                "Running"
                                                                            ]
                                                                        }
                                                                    }
                                                                ]
                                                            },
                                                            "runAfter": {
                                                                "Parse_db_instance_details": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "If"
                                                        },
                                                        "Parse_db_instance_details": {
                                                            "inputs": {
                                                                "content": "@body('Read_current_status_of_database_instance_for_stop')",
                                                                "schema": {
                                                                    "properties": {
                                                                        "id": {
                                                                            "type": "string"
                                                                        },
                                                                        "location": {
                                                                            "type": "string"
                                                                        },
                                                                        "name": {
                                                                            "type": "string"
                                                                        },
                                                                        "properties": {
                                                                            "properties": {
                                                                                "databaseSid": {
                                                                                    "type": "string"
                                                                                },
                                                                                "databaseType": {
                                                                                    "type": "string"
                                                                                },
                                                                                "provisioningState": {
                                                                                    "type": "string"
                                                                                },
                                                                                "status": {
                                                                                    "type": "string"
                                                                                },
                                                                                "vmDetails": {
                                                                                    "items": {
                                                                                        "properties": {
                                                                                            "virtualMachineId": {
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                        "required": [
                                                                                            "virtualMachineId"
                                                                                        ],
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "systemData": {
                                                                            "properties": {
                                                                                "createdAt": {
                                                                                    "type": "string"
                                                                                },
                                                                                "createdBy": {
                                                                                    "type": "string"
                                                                                },
                                                                                "createdByType": {
                                                                                    "type": "string"
                                                                                },
                                                                                "lastModifiedAt": {
                                                                                    "type": "string"
                                                                                },
                                                                                "lastModifiedBy": {
                                                                                    "type": "string"
                                                                                },
                                                                                "lastModifiedByType": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "runAfter": {
                                                                "Read_current_status_of_database_instance_for_stop": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "ParseJson"
                                                        },
                                                        "Read_current_status_of_database_instance_for_stop": {
                                                            "inputs": {
                                                                "host": {
                                                                    "connection": {
                                                                        "name": "@parameters('$connections')['arm-1']['connectionId']"
                                                                    }
                                                                },
                                                                "method": "get",
                                                                "path": "/subscriptions/@{encodeURIComponent(split(items('For_each_VIS_resource_stop'), '/')[2])}/resourcegroups/@{encodeURIComponent(split(items('For_each_VIS_resource_stop'), '/')[4])}/providers/@{encodeURIComponent('Microsoft.Workloads')}/@{encodeURIComponent('sapVirtualInstances/',split(items('For_each_VIS_resource_stop'), '/')[8],'/databaseInstances/',item()?['name'])}",
                                                                "queries": {
                                                                    "x-ms-api-version": "2023-10-01-preview"
                                                                }
                                                            },
                                                            "type": "ApiConnection"
                                                        }
                                                    },
                                                    "expression": "@contains(variables('Running Database Instances'),item()?['id'])",
                                                    "limit": {
                                                        "count": 30,
                                                        "timeout": "PT1H"
                                                    },
                                                    "runAfter": {
                                                        "Initiate_database_instance_stop": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Until"
                                                }
                                            },
                                            "foreach": "@body('Parse_database_instance_stop_operation_response')?['value']",
                                            "runAfter": {
                                                "Parse_database_instance_stop_operation_response": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Foreach"
                                        },
                                        "Parse_database_instance_stop_operation_response": {
                                            "inputs": {
                                                "content": "@body('Read_database_instance_stop_operation_response')",
                                                "schema": {
                                                    "properties": {
                                                        "value": {
                                                            "items": {
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "string"
                                                                    },
                                                                    "location": {
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "type": "string"
                                                                    },
                                                                    "properties": {
                                                                        "properties": {
                                                                            "databaseSid": {
                                                                                "type": "string"
                                                                            },
                                                                            "databaseType": {
                                                                                "type": "string"
                                                                            },
                                                                            "ipAddress": {
                                                                                "type": "string"
                                                                            },
                                                                            "loadBalancerDetails": {
                                                                                "properties": {
                                                                                    "id": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "provisioningState": {
                                                                                "type": "string"
                                                                            },
                                                                            "status": {
                                                                                "type": "string"
                                                                            },
                                                                            "subnet": {
                                                                                "type": "string"
                                                                            },
                                                                            "vmDetails": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "status": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "virtualMachineId": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "virtualMachineId",
                                                                                        "status"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "systemData": {
                                                                        "properties": {
                                                                            "createdAt": {
                                                                                "type": "string"
                                                                            },
                                                                            "createdBy": {
                                                                                "type": "string"
                                                                            },
                                                                            "createdByType": {
                                                                                "type": "string"
                                                                            },
                                                                            "lastModifiedAt": {
                                                                                "type": "string"
                                                                            },
                                                                            "lastModifiedBy": {
                                                                                "type": "string"
                                                                            },
                                                                            "lastModifiedByType": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "tags": {
                                                                        "type": "object"
                                                                    },
                                                                    "type": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "id",
                                                                    "name",
                                                                    "type",
                                                                    "location",
                                                                    "systemData",
                                                                    "properties"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "runAfter": {
                                                "Read_database_instance_stop_operation_response": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ParseJson"
                                        },
                                        "Read_database_instance_stop_operation_response": {
                                            "inputs": {
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['arm']['connectionId']"
                                                    }
                                                },
                                                "method": "get",
                                                "path": "/subscriptions/@{encodeURIComponent(split(items('For_each_VIS_resource_stop'), '/')[2])}/resourcegroups/@{encodeURIComponent(split(items('For_each_VIS_resource_stop'), '/')[4])}/providers/@{encodeURIComponent('Microsoft.Workloads')}/@{encodeURIComponent('sapVirtualInstances/',split(items('For_each_VIS_resource_stop'), '/')[8],'/databaseInstances')}",
                                                "queries": {
                                                    "x-ms-api-version": "2023-10-01-preview"
                                                }
                                            },
                                            "type": "ApiConnection"
                                        }
                                    },
                                    "else": {
                                        "actions": {}
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@parameters('IncludeDatabaseOperations')",
                                                    true
                                                ]
                                            },
                                            {
                                                "not": {
                                                    "contains": [
                                                        "@variables('ErrorResources')",
                                                        "@items('For_each_VIS_resource_stop')"
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "runAfter": {
                                        "Check_if_VIS_is_still_not_stopped": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Initiate_VIS_resource_stop": {
                                    "inputs": {
                                        "body": {
                                            "softStopTimeoutSeconds": "@parameters('SoftStopTimeout')"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['arm']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/subscriptions/@{encodeURIComponent(split(items('For_each_VIS_resource_stop'), '/')[2])}/resourcegroups/@{encodeURIComponent(split(items('For_each_VIS_resource_stop'), '/')[4])}/providers/@{encodeURIComponent('Microsoft.Workloads')}/@{encodeURIComponent('sapVirtualInstances/',split(items('For_each_VIS_resource_stop'), '/')[8])}/@{encodeURIComponent(parameters('OperationName'))}",
                                        "queries": {
                                            "x-ms-api-version": "2023-10-01-preview"
                                        }
                                    },
                                    "type": "ApiConnection"
                                },
                                "Until_VIS_is_running": {
                                    "actions": {
                                        "Check_if_VIS_has_stopped": {
                                            "actions": {
                                                "Remove_VIS_from_running_VIS_Array": {
                                                    "inputs": {
                                                        "from": "@variables('Temp Array with Running VIS [Stop]')",
                                                        "where": "@not(equals(item(),items('For_each_VIS_resource_stop')))"
                                                    },
                                                    "type": "Query"
                                                },
                                                "Set_Array": {
                                                    "inputs": {
                                                        "name": "Temp Array with Running VIS [Stop]",
                                                        "value": "@body('Remove_VIS_from_running_VIS_Array')"
                                                    },
                                                    "runAfter": {
                                                        "Remove_VIS_from_running_VIS_Array": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "SetVariable"
                                                }
                                            },
                                            "else": {
                                                "actions": {
                                                    "Delay_for_Max(soft-stop_timeout_seconds,__15_minutes)": {
                                                        "inputs": {
                                                            "interval": {
                                                                "count": "@max(parameters('SoftStopTimeout'), 900)",
                                                                "unit": "Second"
                                                            }
                                                        },
                                                        "type": "Wait"
                                                    }
                                                }
                                            },
                                            "expression": {
                                                "or": [
                                                    {
                                                        "equals": [
                                                            "@body('Parse_VIS_Details')?['properties']?['status']",
                                                            "Offline"
                                                        ]
                                                    },
                                                    {
                                                        "equals": [
                                                            "@body('Parse_VIS_Details')?['properties']?['status']",
                                                            "Unavailable"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "runAfter": {
                                                "Parse_VIS_Details": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "If"
                                        },
                                        "Parse_VIS_Details": {
                                            "inputs": {
                                                "content": "@body('Read_current_status_of_VIS')",
                                                "schema": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "string"
                                                        },
                                                        "identity": {
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string"
                                                                },
                                                                "userAssignedIdentities": {
                                                                    "properties": {
                                                                        "/subscriptions/49d64d54-e966-4c46-a868-1999802b762c/resourcegroups/ajgupt-test/providers/Microsoft.ManagedIdentity/userAssignedIdentities/ajgupttest": {
                                                                            "properties": {
                                                                                "clientId": {
                                                                                    "type": "string"
                                                                                },
                                                                                "principalId": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "location": {
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "properties": {
                                                            "properties": {
                                                                "configuration": {
                                                                    "properties": {
                                                                        "appLocation": {
                                                                            "type": "string"
                                                                        },
                                                                        "configurationType": {
                                                                            "type": "string"
                                                                        },
                                                                        "infrastructureConfiguration": {
                                                                            "properties": {
                                                                                "appResourceGroup": {
                                                                                    "type": "string"
                                                                                },
                                                                                "applicationServer": {
                                                                                    "properties": {
                                                                                        "instanceCount": {
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "subnetId": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "virtualMachineConfiguration": {
                                                                                            "properties": {
                                                                                                "imageReference": {
                                                                                                    "properties": {
                                                                                                        "offer": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "publisher": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "sku": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "version": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "osProfile": {
                                                                                                    "properties": {
                                                                                                        "adminUsername": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "osConfiguration": {
                                                                                                            "properties": {
                                                                                                                "disablePasswordAuthentication": {
                                                                                                                    "type": "boolean"
                                                                                                                },
                                                                                                                "osType": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "sshKeyPair": {
                                                                                                                    "properties": {
                                                                                                                        "publicKey": {
                                                                                                                            "type": "string"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "type": "object"
                                                                                                                }
                                                                                                            },
                                                                                                            "type": "object"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "vmSize": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "centralServer": {
                                                                                    "properties": {
                                                                                        "instanceCount": {
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "subnetId": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "virtualMachineConfiguration": {
                                                                                            "properties": {
                                                                                                "imageReference": {
                                                                                                    "properties": {
                                                                                                        "offer": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "publisher": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "sku": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "version": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "osProfile": {
                                                                                                    "properties": {
                                                                                                        "adminUsername": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "osConfiguration": {
                                                                                                            "properties": {
                                                                                                                "disablePasswordAuthentication": {
                                                                                                                    "type": "boolean"
                                                                                                                },
                                                                                                                "osType": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "sshKeyPair": {
                                                                                                                    "properties": {
                                                                                                                        "publicKey": {
                                                                                                                            "type": "string"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "type": "object"
                                                                                                                }
                                                                                                            },
                                                                                                            "type": "object"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "vmSize": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "databaseServer": {
                                                                                    "properties": {
                                                                                        "instanceCount": {
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "subnetId": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "virtualMachineConfiguration": {
                                                                                            "properties": {
                                                                                                "imageReference": {
                                                                                                    "properties": {
                                                                                                        "offer": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "publisher": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "sku": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "version": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "osProfile": {
                                                                                                    "properties": {
                                                                                                        "adminUsername": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "osConfiguration": {
                                                                                                            "properties": {
                                                                                                                "disablePasswordAuthentication": {
                                                                                                                    "type": "boolean"
                                                                                                                },
                                                                                                                "osType": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "sshKeyPair": {
                                                                                                                    "properties": {
                                                                                                                        "publicKey": {
                                                                                                                            "type": "string"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "type": "object"
                                                                                                                }
                                                                                                            },
                                                                                                            "type": "object"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "vmSize": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "deploymentType": {
                                                                                    "type": "string"
                                                                                },
                                                                                "highAvailabilityConfig": {
                                                                                    "properties": {
                                                                                        "highAvailabilityType": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "storageConfiguration": {
                                                                                    "properties": {
                                                                                        "transportFileShareConfiguration": {
                                                                                            "properties": {
                                                                                                "configurationType": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "resourceGroup": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "storageAccountName": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "osSapConfiguration": {
                                                                            "properties": {
                                                                                "sapFqdn": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "softwareConfiguration": {
                                                                            "properties": {
                                                                                "bomUrl": {
                                                                                    "type": "string"
                                                                                },
                                                                                "highAvailabilitySoftwareConfiguration": {
                                                                                    "properties": {
                                                                                        "fencingClientId": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "sapBitsStorageAccountId": {
                                                                                    "type": "string"
                                                                                },
                                                                                "softwareInstallationType": {
                                                                                    "type": "string"
                                                                                },
                                                                                "softwareVersion": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "environment": {
                                                                    "type": "string"
                                                                },
                                                                "health": {
                                                                    "type": "string"
                                                                },
                                                                "managedResourceGroupConfiguration": {
                                                                    "properties": {
                                                                        "name": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "managedResourcesNetworkAccessType": {
                                                                    "type": "string"
                                                                },
                                                                "provisioningState": {
                                                                    "type": "string"
                                                                },
                                                                "sapProduct": {
                                                                    "type": "string"
                                                                },
                                                                "state": {
                                                                    "type": "string"
                                                                },
                                                                "status": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "systemData": {
                                                            "properties": {
                                                                "createdAt": {
                                                                    "type": "string"
                                                                },
                                                                "createdBy": {
                                                                    "type": "string"
                                                                },
                                                                "createdByType": {
                                                                    "type": "string"
                                                                },
                                                                "lastModifiedAt": {
                                                                    "type": "string"
                                                                },
                                                                "lastModifiedBy": {
                                                                    "type": "string"
                                                                },
                                                                "lastModifiedByType": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "runAfter": {
                                                "Read_current_status_of_VIS": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ParseJson"
                                        },
                                        "Read_current_status_of_VIS": {
                                            "inputs": {
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['arm-1']['connectionId']"
                                                    }
                                                },
                                                "method": "get",
                                                "path": "/subscriptions/@{encodeURIComponent(split(items('For_each_VIS_resource_stop'), '/')[2])}/resourcegroups/@{encodeURIComponent(split(items('For_each_VIS_resource_stop'), '/')[4])}/providers/@{encodeURIComponent('Microsoft.Workloads')}/@{encodeURIComponent('sapVirtualInstances/',split(items('For_each_VIS_resource_stop'), '/')[8])}",
                                                "queries": {
                                                    "x-ms-api-version": "2023-10-01-preview"
                                                }
                                            },
                                            "type": "ApiConnection"
                                        }
                                    },
                                    "expression": "@contains(variables('Temp Array with Running VIS [Stop]'),items('For_each_VIS_resource_stop'))",
                                    "limit": {
                                        "count": 3,
                                        "timeout": "PT1H"
                                    },
                                    "runAfter": {
                                        "Assume_VIS_is_running_by_adding_it_to_runningVISArray": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Until"
                                }
                            },
                            "foreach": "@parameters('ResourceName')",
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "repetitions": 20
                                }
                            },
                            "type": "Foreach"
                        }
                    }
                },
                "expression": {
                    "and": [
                        {
                            "equals": [
                                "@parameters('OperationName')",
                                "start"
                            ]
                        }
                    ]
                },
                "runAfter": {
                    "Temp_Array_to_list_Database_Instances_in_Running_State_[Stop]": [
                        "Succeeded"
                    ]
                },
                "type": "If"
            },
            "Temp_Array_to_list_Database_Instances_in_Offline_State_[Start]": {
                "inputs": {
                    "variables": [
                        {
                            "name": "Offline Database Instances",
                            "type": "array",
                            "value": []
                        }
                    ]
                },
                "runAfter": {
                    "Temp_VIS_with_unavailable_database_instances_[Start]": [
                        "Succeeded"
                    ]
                },
                "type": "InitializeVariable"
            },
            "Temp_Array_to_list_Database_Instances_in_Running_State_[Stop]": {
                "inputs": {
                    "variables": [
                        {
                            "name": "Running Database Instances",
                            "type": "array",
                            "value": []
                        }
                    ]
                },
                "runAfter": {
                    "Temp_Array_to_list_Database_Instances_in_Offline_State_[Start]": [
                        "Succeeded"
                    ]
                },
                "type": "InitializeVariable"
            },
            "Temp_Array_with_VIS_assumed_to_be_running_[for__loop_in_stop_operation]": {
                "inputs": {
                    "variables": [
                        {
                            "name": "Temp Array with Running VIS [Stop]",
                            "type": "array",
                            "value": []
                        }
                    ]
                },
                "runAfter": {
                    "Resources_with_errors": [
                        "Succeeded"
                    ]
                },
                "type": "InitializeVariable"
            },
            "Temp_Array_with_VIS_assumed_to_be_stopped_[for__loop_in_start_operation]": {
                "inputs": {
                    "variables": [
                        {
                            "name": "Temp Array with Stopped VIS [Start]",
                            "type": "array",
                            "value": []
                        }
                    ]
                },
                "runAfter": {
                    "Temp_Array_with_VIS_assumed_to_be_running_[for__loop_in_stop_operation]": [
                        "Succeeded"
                    ]
                },
                "type": "InitializeVariable"
            },
            "Temp_VIS_with_running_database_instances_[Stop]": {
                "inputs": {
                    "variables": [
                        {
                            "name": "VIS with running database instances",
                            "type": "array",
                            "value": []
                        }
                    ]
                },
                "runAfter": {
                    "Temp_Array_with_VIS_assumed_to_be_stopped_[for__loop_in_start_operation]": [
                        "Succeeded"
                    ]
                },
                "type": "InitializeVariable"
            },
            "Temp_VIS_with_unavailable_database_instances_[Start]": {
                "inputs": {
                    "variables": [
                        {
                            "name": "VIS with unavailable database instances",
                            "type": "array",
                            "value": []
                        }
                    ]
                },
                "runAfter": {
                    "Temp_VIS_with_running_database_instances_[Stop]": [
                        "Succeeded"
                    ]
                },
                "type": "InitializeVariable"
            }
        }
  },
    "parameters": {
          "$connections": {
            "value": {
              "arm": {
                "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', parameters('location'), 'arm')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('armConnectionName'))]",
                "connectionProperties": {
                  "authentication": {
                    "type": "ManagedServiceIdentity",
                    "identity": "[parameters('ManagedIdentityId')]"
                  }
                },
                "connectionName": "variables('armConnectionName')"
              }
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('armConnectionName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "api": {
          "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', parameters('location'), 'arm')]"
        },
        "displayName": "arm",
        "parameterValueType": "Alternative"
      }
    },
    {
      "type": "Microsoft.Insights/activitylogalerts",
      "apiVersion": "2020-10-01",
      "name": "[variables('visAlertName')]",
      "location": "global",
      "dependsOn": [
        "[resourceId('microsoft.insights/actionGroups',  variables('actionGroupName'))]"
      ],
      "properties": {
        "scopes": "[parameters('VirtualInstanceForSAPSolutionsResourceID')]",
        "condition": {
          "allOf": [
            {
              "field": "category",
              "equals": "Administrative"
            },
            {
              "field": "status",
              "containsAny": ["failed", "succeeded"]
            },
            {
              "field": "operationName",
              "equals": "[concat('Microsoft.Workloads/sapVirtualInstances/', parameters('SAPOperationType'), '/action')]"
            },
            {
              "field": "caller",
              "equals": "[reference(parameters('ManagedIdentityId'), '2023-01-31').principalId]"
            }
          ]
        },
        "actions": {
          "actionGroups": [
            {
              "actionGroupId": "[resourceId('microsoft.insights/actionGroups',  variables('actionGroupName'))]",
              "webhookProperties": {}
            }
          ]
        },
        "enabled": true
      }
    },
    {
      "type": "Microsoft.Insights/metricAlerts",
      "apiVersion": "2018-03-01",
      "name": "[variables('logicAppAlertName')]",
      "location": "global",
      "dependsOn": [
        "[resourceId('microsoft.insights/actionGroups',  variables('actionGroupName'))]",
        "[resourceId('Microsoft.Logic/workflows',  parameters('LogicAppName'))]"
      ],
      "properties": {
        "severity": 3,
        "enabled": true,
        "scopes": [
          "[resourceId('Microsoft.Logic/workflows',  parameters('LogicAppName'))]"
        ],
        "evaluationFrequency": "PT5M",
        "windowSize": "PT5M",
        "criteria": {
          "allOf": [
            {
              "threshold": 0,
              "name": "Metric1",
              "metricNamespace": "Microsoft.Logic/workflows",
              "metricName": "ActionsFailed",
              "operator": "GreaterThan",
              "timeAggregation": "Total",
              "skipMetricValidation": false,
              "criterionType": "StaticThresholdCriterion"
            }
          ],
          "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
        },
        "autoMitigate": true,
        "targetResourceType": "Microsoft.Logic/workflows",
        "targetResourceRegion": "[parameters('location')]",
        "actions": [
          {
            "actionGroupId": "[resourceId('microsoft.insights/actionGroups',  variables('actionGroupName'))]",
            "webHookProperties": {}
          }
        ]
      }
    },
    {
      "type": "microsoft.insights/actionGroups",
      "apiVersion": "2023-01-01",
      "name": "[variables('actionGroupName')]",
      "location": "Global",
      "properties": {
        "groupShortName": "actionGroup",
        "enabled": true,
        "emailReceivers": [],
        "smsReceivers": [],
        "webhookReceivers": [],
        "eventHubReceivers": [],
        "itsmReceivers": [],
        "azureAppPushReceivers": [],
        "automationRunbookReceivers": [],
        "voiceReceivers": [],
        "logicAppReceivers": [],
        "azureFunctionReceivers": [],
        "armRoleReceivers": []
      }
    }
  ]
}